%{
#include <stdio.h>
#include <alloc.h>
#include "cf_parser.h" // Token constants generated by yacc from cf_parser.y
%}

%option reentrant bison-bridge
%option header-file="cf_tokenizer.h"

%%
;                       {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return SEMICOLON;}
,                       {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return COMMA;}
\{                      {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return OPEN_CURLY;}
\}                      {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return CLOSE_CURLY;}
=>                      {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return FAT_ARROW;}
body                    {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return BODY;}
\"[^"]*\"               {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return QUOTED_STRING;}
[a-zA-Z0-9_]+           {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return IDENTIFIER;}
\n.*                    {
                            parser->line_number += 1;
                            parser->column_number = 1;
                            free(parser->current_line);
                            parser->current_line = xstrdup(yytext + 1);
                            yyless(1);
                        }
[ \t\r]                 {parser->column_number += yyleng;} // No token returned!
.                       {parser->column_number += yyleng; parser->current_token = *yylval = yytext; return UNKNOWN;}
%%
